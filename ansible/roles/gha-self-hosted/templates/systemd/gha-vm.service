#
# {{ ansible_managed }}
#

[Unit]
Description=Start a GHA self-hosted runner virtual machine
# Ensure the base image is present when starting the VM.
After=gha-self-hosted-boot-time.service
Wants=gha-self-hosted-boot-time.service

[Service]
ExecStart=/opt/gha-self-hosted/source/executor/run.py {{ item.name }}
Restart=always

WorkingDirectory=/opt/gha-self-hosted

Environment=GITHUB_TOKEN={{ github_token }}

# Enable extra sandboxing at the systemd level. This will:
#
# - Create a random user and group each time the service is started, deleting
#   such user when the service stops. This prevents an attacker from having any
#   privilege in the host system if they happened to escape the VM.
#
# - Mount the whole filesystem except /tmp and /var/tmp as read-only,
#   preventing an attacker from compromising the system if they happened to
#   escape the VM. This also prevents issues with files being owned by the
#   emphemeral user IDs.
#
# - Create a private /tmp filesystem and mount it in /tmp and /var/tmp,
#   preventing anyone else from accessing its content. This will prevent other
#   processes from interacting with the VM's underlying storage and parameters,
#   including attackers if they happened to escape the VM.
#
# See DynamicUser= in `man systemd.exec` for more information on this.
DynamicUser=true

# Enable access to KVM
SupplementaryGroups=kvm

# First send a SIGINT to the main process (our Python script), then after the
# timeout send a SIGKILL to all the processes in the control group. This allows
# to try and cleanly shutdown the VM while guaranteeing all processes will be
# eventually killed.
KillMode=mixed
KillSignal=SIGINT

[Install]
WantedBy=multi-user.target
